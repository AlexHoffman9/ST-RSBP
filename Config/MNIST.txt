#Comment#
#NON_LINEARITY = NL_SIGMOID , NL_TANH , NL_RELU#
IS_GRADIENT_CHECKING = false;   #is true when debug#
BOOST_METHOD = true;            #allow boost weight train#
EFFECT_RATIO = true;            #use e^k_{i|j}/o^{k-1}_j for estimate the grad of syn effect#
                                #need to set batch = 1 in this case#
OPTIMIZER = adam;               # use adam as the optimizer , by default is sgd with momentum #

SHOWIMAGE = false;              #show the images after transformation#
TEST_EPOCH = 100;                 #the period to get the test dataset's error rate#
WHITE_NOISE = 0.0;  
LAMBDA_REG  = 10;               # param for weight regularization #
BETA_REG    = 0.04;               

WEIGHT_LIMIT= 8.0;


BATCH_SIZE = 1;                
CHANNELS = 1;                   #1, 3, 4#
END_TIME = 400;                 #The spike train duration#

#CROP = 0;#                       #0<= crop <=imgSize#
#SCALE = 12;#                   #12% of ImgSize#
#ROTATION = 12;#                #angle#
#DISTORTION = 3.4;#               #just for mnist#


TRAIN_SAMPLES = 1000;              # number of train/test samples#
TEST_SAMPLES = 100;
TRAIN_DATA_PATH = ./mnist/train-images-idx3-ubyte;
TRAIN_LABEL_PATH= ./mnist/train-labels-idx1-ubyte;
TEST_DATA_PATH = ./mnist/t10k-images-idx3-ubyte;
TEST_LABEL_PATH= ./mnist/t10k-labels-idx1-ubyte;

[
LAYER = DATASPIKING;
NAME  = data;
NUM_NEURONS = 784;
]

[
LAYER = SPIKING;
NAME  = hidden_0;
NUM_NEURONS = 400;
INPUT = data;
VTH = 8;
T_REFRAC = 2;
TAU_M = 128;
TAU_S = 8;
initW = 1;
initType = Bernoulli;
selfLoopStrength = 0;
selfLoopRatio = 1;
LearningRate = 0.001;
]

[
LAYER = RESERVOIR;
NAME  = reservoir;
NUM_NEURONS = 400;
INPUT = hidden_0;
VTH = 8;
T_REFRAC = 2;
TAU_M = 128;
TAU_S = 8;
initW = 1;
Train_Reservoir = true;
#weightConnect = 32;#     # number of neurons connects to each input neuron #
initType = Bernoulli;
laterialType = RESERVOIR;  # the laterical connections type: RESERVOIR or LOCAL_INHIBITION # 
reservoirDim = 5 x 5 x 16;
LearningRate = 0.001;
]

[
LAYER = SPIKING;
NUM_CLASSES = 10;
NAME  = output;
NUM_NEURONS = 10;
INPUT = reservoir;
VTH = 8;
T_REFRAC = 2;
TAU_M = 128;
TAU_S = 8;
initW = 1;
initType = Bernoulli;
laterialType = LOCAL_INHIBITION;
localInbStrength = 1;
DESIRED_LEVEL = 35;
UNDESIRED_LEVEL = 5;
MARGIN = 5;
LearningRate = 0.001;
]
